version: '3.8'
services:
  traefik:
    image: 'public.ecr.aws/docker/library/traefik:v2.7'
    command:
      - '--log.level=DEBUG'
      - '--api.insecure=true'
      - '--providers.docker=true'
      - '--providers.docker.exposedbydefault=false'
      - '--entrypoints.web.address=:80'
    ports:
      - '80:80'
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock:ro'
    networks:
      - internal
      - web
    depends_on:
      - frontend

  frontend:
    build:
      context: frontend
    depends_on:
      - backend
    networks:
        - internal
        - web
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.frontend.rule=Host(`localhost`)'
      - 'traefik.http.services.frontend.loadbalancer.server.port=80'
      - 'traefik.http.routers.frontend.entrypoints=web'

  backend:
    build:
      context: backend
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/todo?schema=public
      - AUTH_SECRET_KEY=fpc0hmAEI4o4WMmq7L3nkgZuHIKXUl9qUj9MoX6D1tsHxFpEuRpfZ9gBbQ/Q2/0RM5l3ZSk0nREFer+9
      - REDIS_CLIENT_URL=redis://redis:6379
    depends_on:
      - db
      - redis
    networks:
        - internal
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.backend.rule=Host(`localhost`) && PathPrefix(`/api`)'
      - 'traefik.http.routers.backend.entrypoints=web'
      - 'traefik.http.services.backend.loadbalancer.server.port=3000'

  db:
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5432:5432'
    volumes: 
      - db:/var/lib/postgresql/data
    networks:
        - internal

  redis:
    image: 'bitnami/redis:latest'
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - '6379:6379'
    networks:
        - internal

volumes:
  db:
    driver: local

networks:
  web:
  internal:
